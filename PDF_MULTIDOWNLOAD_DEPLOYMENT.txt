================================================================================
PDF & MULTI-FORMAT DOWNLOAD DEPLOYMENT GUIDE
================================================================================

NEW FEATURES
============
✓ Download documents as PDF (in addition to DOCX)
✓ Format selection endpoint shows available download types
✓ Smart fallback conversion (docx2pdf → LibreOffice)
✓ Maintains all existing DOCX functionality

DEPLOYMENT TIME: 10 minutes

FILES TO UPLOAD TO PYTHONANYWHERE
==================================
1. PRODUCTION_READY/backend/document_generator.py (UPDATED)
   - Added PDF conversion functions
   - Added dual-method converter (docx2pdf + LibreOffice)

2. PRODUCTION_READY/backend/main.py (UPDATED)
   - Added 4 new endpoints
   - Updated API status with new features

3. PRODUCTION_READY/backend/requirements.txt (NEEDS UPDATE)
   Add this line:
     docx2pdf>=0.5.0

QUICK DEPLOYMENT STEPS
======================

Step 1: Update requirements.txt
===============================
1. Open current requirements.txt on PythonAnywhere
2. Add this line:
   docx2pdf>=0.5.0
3. Save

Step 2: Upload Updated Files
=============================
1. Go to PythonAnywhere Files tab
2. Navigate to /home/leonardus437/rtb_planner/
3. Upload:
   ✓ document_generator.py (from PRODUCTION_READY/backend/)
   ✓ main.py (from PRODUCTION_READY/backend/)

Step 3: Install Dependencies
=============================
Option A - Automatic (Recommended):
  1. Reload web app (Web tab → Reload)
  2. PythonAnywhere auto-installs from requirements.txt

Option B - Manual (if automatic fails):
  1. Go to Web tab
  2. Click "Start web console"
  3. Run: pip install docx2pdf
  4. Verify: python -c "from docx2pdf import convert; print('OK')"

Step 4: Reload Application
===========================
1. Go to Web tab
2. Click "Reload leonardus437.pythonanywhere.com"
3. Wait 30-45 seconds
4. Status shows: "Last reload: just now"

Step 5: Test Functionality
===========================
Test Format Selection Endpoint:
  URL: https://leonardus437.pythonanywhere.com/session-plans/16/download-formats?phone=%2B250789751595
  Expected: JSON with available formats (docx, pdf)

Test DOCX Download (Existing):
  URL: https://leonardus437.pythonanywhere.com/session-plans/16/download?phone=%2B250789751595
  Expected: .docx file downloads

Test PDF Download (New):
  URL: https://leonardus437.pythonanywhere.com/session-plans/16/download-pdf?phone=%2B250789751595
  Expected: .pdf file downloads (first time may take 5-10 seconds)

Repeat for Schemes:
  https://leonardus437.pythonanywhere.com/schemes-of-work/X/download-formats?phone=...

NEW API ENDPOINTS
=================

Session Plans:
  GET /session-plans/{id}/download-formats?phone={phone}
      → Returns available formats
  GET /session-plans/{id}/download?phone={phone}
      → Download as DOCX (existing)
  GET /session-plans/{id}/download-pdf?phone={phone}
      → Download as PDF (new)

Schemes of Work:
  GET /schemes-of-work/{id}/download-formats?phone={phone}
      → Returns available formats
  GET /schemes-of-work/{id}/download?phone={phone}
      → Download as DOCX (existing)
  GET /schemes-of-work/{id}/download-pdf?phone={phone}
      → Download as PDF (new)

API STATUS RESPONSE
===================
Now includes:
  "features": [
    "authentication",
    "docx_generation",
    "pdf_generation",        ← NEW
    "multi_format_download"  ← NEW
  ]

TESTING CHECKLIST
=================
☐ Format selector returns JSON with 2 formats
☐ DOCX download works (should be unchanged)
☐ PDF download works (first time: 5-10 sec, subsequent: faster)
☐ Downloaded PDF opens in PDF reader
☐ Downloaded DOCX opens in Word
☐ Table formatting preserved in PDF
☐ Text formatting (bold, italic) preserved
☐ No error messages in logs

PERFORMANCE EXPECTATIONS
========================
First PDF conversion: 5-10 seconds (normal)
Second+ conversions: 2-5 seconds (cached or faster)
Timeout: 60 seconds (auto-fails if exceeds)

Why is first PDF slow?
  - LibreOffice startup overhead
  - First conversion initializes system
  - Subsequent conversions are faster

TROUBLESHOOTING
===============

Problem: "No module named 'docx2pdf'"
Solution: 
  - Check if pip install ran successfully
  - In web console: pip install docx2pdf
  - Reload web app

Problem: "No PDF converter available"
Solution:
  - docx2pdf library not available
  - LibreOffice not installed
  - Users can still download DOCX
  - Contact PythonAnywhere support for LibreOffice

Problem: PDF file is blank/corrupted
Solution:
  - Try downloading again
  - Check DOCX file is valid first
  - See logs for specific error

Problem: Conversion timeout (>60 seconds)
Solution:
  - Document too large
  - Server overloaded
  - Try downloading DOCX instead
  - Contact support

LOGS
====
Check error log for conversion details:
  File: /var/log/leonardus437.pythonanywhere.com.error.log
  
Look for:
  "Converting ..." → Conversion started
  "PDF created" → Success
  "LibreOffice conversion failed" → Converter issue
  "Cleaned up temp" → Temp file removed

ROLLBACK (if issues)
====================
If PDF feature causes problems:
  1. Delete new endpoint code from main.py
  2. Remove PDF functions from document_generator.py
  3. Remove docx2pdf from requirements.txt
  4. Reload app
  5. Users revert to DOCX-only downloads

VERIFICATION COMMANDS
======================
Test conversion locally (if needed):
  python -c "from document_generator import generate_session_plan_pdf; 
             print('Module imports OK')"

Check if docx2pdf works:
  python -c "from docx2pdf import convert; print('OK')"

Test PDF generation with sample data:
  See PDF_AND_MULTIDOWNLOAD_GUIDE.md for detailed testing

NEXT STEPS
==========
1. ✓ Upload files (5 minutes)
2. ✓ Test endpoints (2 minutes)
3. ✓ Verify downloads work (2 minutes)
4. ✓ Monitor logs (24 hours)
5. ✓ Announce to teachers

SUPPORT
=======
Documentation:
  - PDF_AND_MULTIDOWNLOAD_GUIDE.md (detailed technical guide)
  - This file (quick deployment)

Teachers Will See:
  - "Download as Word (.docx)" button
  - "Download as PDF (.pdf)" button
  - Both options on same page before download

DEPLOYMENT COMPLETE WHEN
========================
✓ Files uploaded
✓ requirements.txt updated
✓ Web app reloaded
✓ Format endpoints return valid JSON
✓ PDF download works (>50KB file)
✓ No error messages in logs
✓ Teachers can see both download options

EXPECTED OUTCOMES AFTER DEPLOYMENT
===================================
Before:
  - Only DOCX downloads available
  - API shows: ["authentication", "docx_generation"]

After:
  - Both DOCX and PDF downloads available
  - Teachers choose format before downloading
  - API shows: ["authentication", "docx_generation", "pdf_generation", "multi_format_download"]
  - PDFs preserve all formatting
  - No performance degradation

KNOWN LIMITATIONS
=================
- First PDF generation takes 5-10 seconds (normal)
- PDF is read-only (no editing)
- Very large documents (>50 pages) may take longer
- Complex formatting may render differently in PDF vs DOCX

================================================================================
Ready to Deploy: YES ✓
Estimated Time: 10 minutes
Risk Level: LOW (fallback to existing DOCX functionality)
User Impact: POSITIVE (more format options)
================================================================================
